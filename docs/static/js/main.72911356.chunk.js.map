{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","onChange","target","value","placeholder","type","getGifs","search","apikey","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAejD,OACC,0BAAMC,SAVc,SAACC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMjB,2BACKO,SAdmB,SAACL,GAAD,OAAOF,EAAcE,EAAEM,OAAOC,QAejDC,YAAY,aACZC,KAAK,OACLF,MAAQV,M,uBCxBHa,EAAO,uCAAG,WAAOC,EAAQC,GAAf,uBAAAC,EAAA,6DACfC,EADe,uDACwCF,EADxC,cACsDG,UAAUJ,GADhE,sBAEFK,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,UAAUZ,QATT,kBAadM,GAbc,4CAAH,wDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHEO,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAE5B,IAF0C,EAIhBpC,mBAAS,CACjCuB,KAAM,GACNc,SAAS,IAN+B,mBAInCC,EAJmC,KAI5BC,EAJ4B,KAiB1C,OARAC,qBAAU,WACR1B,EAAQsB,EARK,oCASVK,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBhB,KAAMmB,EACNL,SAAS,SAEZ,CAACD,IAEGE,EDd0BK,CAAaP,GAAjCP,EAF0B,EAE/BN,KAAac,EAFkB,EAElBA,QAErB,OACE,oCACE,wBAAIL,UAAU,qCAAsCI,GAElDC,GAAW,0CAEb,yBAAKL,UAAU,aAEXH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEkB,IAAMlB,EAAIC,IACLD,UEfNmB,EAAe,WAAO,IAAD,EAEI7C,mBAAS,CAAC,KAFd,mBAEzB8C,EAFyB,KAEb/C,EAFa,KASjC,OACC,oCACC,4CACG,kBAAC,EAAD,CAAaA,cAAgBA,IAChC,6BAEA,4BAEE+C,EAAWrB,KAAI,SAAAW,GAAQ,OACtB,kBAAC,EAAD,CAASA,SAAWA,EAAWQ,IAAMR,UCjB3CW,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.72911356.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\tconst handleInputChange = (e) => setInputValue(e.target.value)\r\n\r\n\tconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories(cats => [inputValue, ...cats])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit }>\r\n\t\t\t<input\r\n        onChange={ handleInputChange }\r\n        placeholder='Buscar ...'\r\n        type='text'\r\n        value={ inputValue }\r\n      />\r\n\t\t</form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( search, apikey ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${ apikey }&q=${ encodeURI(search) }&limit=10`\r\n  const resp = await fetch(url)\r\n  const { data } = await resp.json()\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title }/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n      { loading && <p>Loading ...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem\r\n              key={ img.id }\r\n              { ...img }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const apiKey = 'lxWFpxSwBczbzqySkiOHH0Jof9gUAPT2'\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category, apiKey)\r\n      .then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n      }))\r\n  }, [category])\r\n\r\n  return state // { data: [], loading: true }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([''])\r\n  \r\n  // const handleAdd = () => {\r\n  //   // setCategories([...categories, 'Full Metal Alchemist'])\r\n  //   setCategories( cats => [...cats, 'Full Metal Alchemist'] )\r\n  // }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(category => (\r\n\t\t\t\t\t\t<GifGrid category={ category } key={ category } />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}